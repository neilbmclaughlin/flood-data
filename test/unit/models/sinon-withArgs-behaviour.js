const Lab = require('@hapi/lab')
const lab = exports.lab = Lab.script()
const sinon = require('sinon')

lab.experiment('sinon', () => {
  lab.test('can a stub be used with matchers to count calls', async () => {
    const matcher42 = sinon.match((value) => value === 42, 'not 42')
    const matcher1 = sinon.match((value) => value === 1, 'not 1')
    const matcher2 = sinon.match((value) => value === 2, 'not 2')
    const matcher3 = sinon.match((value) => value === 3, 'not 3')
    const object = { async method () {} }
    const spy = sinon
      .stub(object, 'method')
      .withArgs(matcher42)
      .resolves('foo')
      .withArgs(matcher1)
      .resolves('bar')
      .withArgs(matcher1, matcher2)
      .resolves('boo')
      .withArgs(matcher2, matcher3)
      .resolves('hoo')
    // console.log(await object.method(1, 2))
    console.log(await object.method(2, 3))
    console.log(await object.method(42))
    console.log(await object.method(42))
    console.log(await object.method(1))
    console.log(await object.method(0))
    // sinon.assert.callCount(spy.withArgs(matcher1, matcher2), 1)
    sinon.assert.callCount(spy.withArgs(matcher2, matcher3), 1)
    sinon.assert.callCount(spy.withArgs(matcher42), 2)
    sinon.assert.callCount(spy.withArgs(matcher1), 1)
    sinon.assert.callCount(spy.withArgs(0), 1)
    sinon.assert.callCount(spy.withArgs(9), 0)
  })
})
